project_name: bee-clef

release:
  prerelease: auto

builds:
  - id: darwin-amd64
    main: ./cmd/clef
    binary: bee-clef
    dir: go-ethereum
    goos:
      - darwin
    goarch:
      - amd64
    env:
      - CC=o64-clang
      - CXX=o64-clang++
    flags:
      - -v
      - -trimpath
    ldflags:
      - -s -w
  - id: darwin-arm64
    main: ./cmd/clef
    binary: bee-clef
    dir: go-ethereum
    goos:
      - darwin
    goarch:
      - arm64
    env:
      - CC=oa64-clang
      - CXX=oa64-clang++
    flags:
      - -v
      - -trimpath
    ldflags:
      - -s -w
  - id: linux-arm64
    binary: bee-clef
    main: ./cmd/clef
    dir: go-ethereum
    goos:
      - linux
    goarch:
      - arm64
    env:
      - CC=aarch64-linux-gnu-gcc
      - CXX=aarch64-linux-gnu-g++
    flags:
      - -v
      - -trimpath
    ldflags:
      - -s -w
  - id: linux-armv7
    main: ./cmd/clef
    binary: bee-clef
    dir: go-ethereum
    goos:
      - linux
    goarch:
      - arm
    goarm:
      - 7
    env:
      - CC=arm-linux-gnueabihf-gcc
      - CXX=arm-linux-gnueabihf-g++
    flags:
      - -v
      - -trimpath
    ldflags:
      - -s -w
  - id: linux-amd64
    main: ./cmd/clef
    binary: bee-clef
    dir: go-ethereum
    goos:
      - linux
    goarch:
      - amd64
    flags:
      - -v
      - -trimpath
    ldflags:
      - -s -w
  - id: windows-amd64
    main: ./cmd/clef
    binary: bee-clef
    dir: go-ethereum
    goos:
      - windows
    goarch:
      - amd64
    env:
      - CC=x86_64-w64-mingw32-gcc
      - CXX=x86_64-w64-mingw32-g++
    flags:
      - -v
      - -trimpath
    ldflags:
      - -s -w
snapshot:
  name_template: "{{.Tag}}-snapshot"

archives:
  - name_template: "{{ tolower .ProjectName }}-{{ tolower .Os }}-{{ tolower .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}"

    format: binary
  -
    id: homebrew-amd64
    builds:
    - darwin-amd64
    name_template: "{{ tolower .ProjectName }}-{{ tolower .Os }}-{{ tolower .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}"
    files:
    - src: 'packaging/homebrew-amd64/*'
      dst: '.'
      strip_parent: true
    - packaging/4byte.json
    - packaging/rules.js
    - packaging/default
    - LICENSE
    - README.md
  -
    id: homebrew-arm64
    builds:
    - darwin-arm64
    name_template: "{{ tolower .ProjectName }}-{{ tolower .Os }}-{{ tolower .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}"
    files:
    - src: 'packaging/homebrew-arm64/*'
      dst: '.'
      strip_parent: true
    - packaging/4byte.json
    - packaging/rules.js
    - packaging/default
    - LICENSE
    - README.md

nfpms:
  - file_name_template: "{{ tolower .ProjectName }}_{{ tolower .Version }}_{{ tolower .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}"

    vendor: Ethereum Swarm
    homepage: https://swarm.ethereum.org/

    maintainer: Swarm Devops <devops@ethswarm.org>

    description: Ethereum Clef

    license: LGPL-3.0

    formats:
      - deb
      - rpm

    contents:
      - src: packaging/default
        dst: /etc/default/bee-clef
        type: config
      - src: packaging/rules.js        
        dst: /etc/bee-clef/rules.js
        type: config
      - src: packaging/4byte.json        
        dst: /etc/bee-clef/4byte.json
        type: config
      - src: packaging/bee-clef-keys        
        dst: /usr/bin/bee-clef-keys
      - src: packaging/bee-clef-service        
        dst: /usr/bin/bee-clef-service
      - src: packaging/bee-clef.service        
        dst: /lib/systemd/system/bee-clef.service

    overrides:
      deb:
        scripts:
          preinstall: ./packaging/deb/preinst
          postinstall: ./packaging/deb/postinst
          preremove: ./packaging/deb/prerm
          postremove: ./packaging/deb/postrm
      rpm:
        scripts:
          preinstall: ./packaging/rpm/pre
          postinstall: ./packaging/rpm/post
          preremove: ./packaging/rpm/preun
          postremove: ./packaging/rpm/postun

    bindir: /usr/bin

brews:
  - name: swarm-clef
    tap:
      owner: ethersphere
      name: homebrew-tap
      token: "{{ .Env.HOMEBREW_TAP_PAT }}"
    ids:
      - homebrew-amd64
      - homebrew-arm64
    commit_author:
      name: bee-worker
      email: bee-worker@ethswarm.org
    homepage: https://swarm.ethereum.org/
    description: Ethereum Clef
    caveats: |
        Logs: #{var}/log/swarm-clef/swarm-clef.log
    test: |
      system "#{bin}/bee-clef --version"
    install: |
      (etc/"swarm-clef").mkpath
      (var/"lib/swarm-clef").mkpath
      bin.install ["bee-clef", "swarm-clef", "swarm-clef-init", "swarm-clef-keys"]
      etc.install "packaging/default" => "swarm-clef/default" unless File.exists? etc/"swarm-clef/default"
      etc.install "packaging/4byte.json" => "swarm-clef/4byte.json" unless File.exists? etc/"swarm-clef/4byte.json"
      etc.install "packaging/rules.js" => "swarm-clef/rules.js" unless File.exists? etc/"swarm-clef/rules.js"
    post_install: |
      unless File.exists? "#{var}/lib/swarm-clef/password"
      system("openssl", "rand", "-out", var/"lib/swarm-clef/password", "-base64", "32")
      end
      system(bin/"swarm-clef-init", ">/dev/null", "2>&1")
    plist: |
      <?xml version="1.0" encoding="UTF-8"?>
      <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
      <plist version="1.0">
      <dict>
        <key>KeepAlive</key>
        <true/>
        <key>Label</key>
        <string>#{plist_name}</string>
        <key>ProgramArguments</key>
        <array>
          <string>#{bin}/swarm-clef</string>
          <string>start</string>
        </array>
        <key>RunAtLoad</key>
        <true/>
        <key>StandardOutPath</key>
        <string>#{var}/log/swarm-clef/swarm-clef.log</string>
        <key>StandardErrorPath</key>
        <string>#{var}/log/swarm-clef/swarm-clef.log</string>
      </dict>
      </plist>

dockers:
- image_templates:
  - "ethersphere/clef:{{ .Version }}-amd64"
  use_buildx: true
  ids:
    - linux-amd64
  goarch: amd64
  dockerfile: Dockerfile.goreleaser
  build_flag_templates:
  - "--platform=linux/amd64"
  - "--pull"
  - "--label=org.opencontainers.image.created={{.Date}}"
  - "--label=org.opencontainers.image.title={{.ProjectName}}"
  - "--label=org.opencontainers.image.revision={{.FullCommit}}"
  - "--label=org.opencontainers.image.version={{.Version}}"
  extra_files:
    - packaging/rules.js
    - packaging/4byte.json
    - packaging/docker/entrypoint.sh
- image_templates:
  - "ethersphere/clef:{{ .Version }}-armv7"
  use_buildx: true
  ids:
    - linux-armv7
  goarch: arm
  goarm: 7
  dockerfile: Dockerfile.goreleaser
  build_flag_templates:
  - "--platform=linux/arm/v7"
  - "--pull"
  - "--label=org.opencontainers.image.created={{.Date}}"
  - "--label=org.opencontainers.image.title={{.ProjectName}}"
  - "--label=org.opencontainers.image.revision={{.FullCommit}}"
  - "--label=org.opencontainers.image.version={{.Version}}"
  extra_files:
    - packaging/rules.js
    - packaging/4byte.json
    - packaging/docker/entrypoint.sh
- image_templates:
  - "ethersphere/clef:{{ .Version }}-arm64v8"
  use_buildx: true
  ids:
    - linux-arm64
  goarch: arm64
  dockerfile: Dockerfile.goreleaser
  build_flag_templates:
  - "--platform=linux/arm64/v8"
  - "--pull"
  - "--label=org.opencontainers.image.created={{.Date}}"
  - "--label=org.opencontainers.image.title={{.ProjectName}}"
  - "--label=org.opencontainers.image.revision={{.FullCommit}}"
  - "--label=org.opencontainers.image.version={{.Version}}"
  extra_files:
    - packaging/rules.js
    - packaging/4byte.json
    - packaging/docker/entrypoint.sh
docker_manifests:
- name_template: ethersphere/clef:{{ .Major }}
  image_templates:
  - ethersphere/clef:{{ .Version }}-amd64
  - ethersphere/clef:{{ .Version }}-armv7
  - ethersphere/clef:{{ .Version }}-arm64v8
  skip_push: auto
- name_template: ethersphere/clef:{{ .Major }}.{{ .Minor }}
  image_templates:
  - ethersphere/clef:{{ .Version }}-amd64
  - ethersphere/clef:{{ .Version }}-armv7
  - ethersphere/clef:{{ .Version }}-arm64v8
  skip_push: auto
- name_template: ethersphere/clef:{{ .Major }}.{{ .Minor }}.{{ .Patch }}{{ with .Prerelease }}-{{ . }}{{ end }}
  image_templates:
  - ethersphere/clef:{{ .Version }}-amd64
  - ethersphere/clef:{{ .Version }}-armv7
  - ethersphere/clef:{{ .Version }}-arm64v8
- name_template: ethersphere/clef:latest
  image_templates:
  - ethersphere/clef:{{ .Version }}-amd64
  - ethersphere/clef:{{ .Version }}-armv7
  - ethersphere/clef:{{ .Version }}-arm64v8
- name_template: ethersphere/clef:beta
  image_templates:
  - ethersphere/clef:{{ .Version }}-amd64
  - ethersphere/clef:{{ .Version }}-armv7
  - ethersphere/clef:{{ .Version }}-arm64v8
  skip_push: auto
